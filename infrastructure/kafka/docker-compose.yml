version: '3.8'

services:
  # Single Kafka Broker for Development
  kafka-broker:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-broker
    hostname: kafka-broker
    environment:
      # KRaft Configuration (Single Node)
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka-broker:9093'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      
      # Listeners
      KAFKA_LISTENERS: 'PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka-broker:9092,EXTERNAL://localhost:9092'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT'
      
      # Storage
      KAFKA_LOG_DIRS: '/var/lib/kafka/data'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      
      # Performance
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      
      # Security (optional)
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    ports:
      - "9092:9094"
      - "9093:9093"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka-network

  # Kafka UI (Provectus Labs)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local-dev
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-broker:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: ''
      KAFKA_CLUSTERS_0_READONLY: 'false'
    networks:
      - kafka-network
    depends_on:
      - kafka-broker

  # Initialize Kafka Topics
  init-kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: init-kafka
    depends_on:
      - kafka-broker
    environment:
      # Disable file logging to avoid permission errors
      KAFKA_LOG4J_ROOTLOGGER: "INFO, stdout"
      KAFKA_LOG4J_APPENDERS: "stdout"
      KAFKA_LOG4J_APPENDER_STDOUT_LAYOUT: "org.apache.log4j.PatternLayout"
      KAFKA_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %m (%c)%n"
      # Disable specific file appenders that cause permission errors
      KAFKA_LOG4J_LOGGERS: "org.apache.kafka.clients.NetworkClient=WARN, kafka.producer.async.DefaultEventHandler=DEBUG, state.change.logger=INFO"
    networks:
      - kafka-network
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        cub kafka-ready -b kafka-broker:9092 1 30
        
        echo 'Creating topics...'
        kafka-topics --create --if-not-exists --bootstrap-server kafka-broker:9092 --replication-factor 1 --partitions 3 --topic payment-request
        kafka-topics --create --if-not-exists --bootstrap-server kafka-broker:9092 --replication-factor 1 --partitions 3 --topic payment-response
        kafka-topics --create --if-not-exists --bootstrap-server kafka-broker:9092 --replication-factor 1 --partitions 3 --topic restaurant-approval-request
        kafka-topics --create --if-not-exists --bootstrap-server kafka-broker:9092 --replication-factor 1 --partitions 3 --topic restaurant-approval-response
        
        echo 'Topics created successfully!'
        kafka-topics --list --bootstrap-server kafka-broker:9092
      "

  postgres:
    image: postgres:13
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  kafka-data:
    driver: local
  postgres-data:
    driver: local

networks:
  kafka-network:
    driver: bridge
